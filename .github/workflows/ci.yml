name: Tests & Create PR

on:
  push:
    branches:
      - test

jobs:
  tests:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: depense
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -uroot -proot"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout du code
        uses: actions/checkout@v4

      - name: Setup PHP avec Composer
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          tools: composer:v2

      - name: Copie .env.test vers .env.test.local
        run: cp .env.test .env.test.local

      - name: Adapter DATABASE_URL pour CI
        run: |
          sed -i 's|127.0.0.1:3307|127.0.0.1:3306|g' .env.test.local
          sed -i 's|root:@|root:root@|g' .env.test.local

      - name: D√©sactiver ONLY_FULL_GROUP_BY
        run: |
            mysql -h 127.0.0.1 -uroot -proot -e "SET GLOBAL sql_mode=(SELECT REPLACE(@@sql_mode,'ONLY_FULL_GROUP_BY',''));"

      - name: Installer les d√©pendances
        run: composer install --no-progress --no-interaction --prefer-dist --optimize-autoloader

    # Installer Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.18'   # ou la version que tu utilises
          cache: 'npm'         # cache npm pour acc√©l√©rer l'installation

      # Installer d√©pendances front
      - name: Installer d√©pendances front
        run: npm install

      # Lancer build front
      - name: Build front
        run: npm run build

      - name: Attendre que MySQL d√©marre
        run: |
          for i in {1..10}; do
            if mysql -h 127.0.0.1 -P3306 -uroot -proot -e "SELECT 1;" depense; then
              echo "MySQL est pr√™t ‚úÖ"
              break
            fi
            echo "‚è≥ En attente de MySQL..."
            sleep 5
          done

      - name: Cr√©er la base + sch√©ma
        run: |
          php bin/console doctrine:database:create --env=test --if-not-exists
          php bin/console doctrine:schema:create --env=test

      - name: Lancer les tests PHPUnit
        run: ./vendor/bin/phpunit --testdox

  create-pr:
    needs: tests
    runs-on: ubuntu-latest
    if: success()
    steps:
      # Checkout complet pour la PR
      - name: Checkout du code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # V√©rifier branches (optionnel)
      - name: V√©rifier les branches
        run: git branch -a

      # Cr√©er PR automatiquement
      - name: Cr√©er une Pull Request vers main
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GH_PAT }}   # üîë Utiliser ton PAT ici
          branch: test
          base: main
          commit-message: "Update test branch after tests"
          title: "Merge test into main"
          body: |
            Cette PR a √©t√© cr√©√©e automatiquement apr√®s que les tests ont r√©ussi.
            Merci de la r√©viser et de la merger manuellement si tout est OK.
          draft: false
